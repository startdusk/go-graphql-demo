// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	data "github.com/startdusk/twitter/data"
	mock "github.com/stretchr/testify/mock"
)

// AuthService is an autogenerated mock type for the AuthService type
type AuthService struct {
	mock.Mock
}

// Register provides a mock function with given fields: ctx, user
func (_m *AuthService) Register(ctx context.Context, user data.User) (data.AuthResponse, error) {
	ret := _m.Called(ctx, user)

	var r0 data.AuthResponse
	if rf, ok := ret.Get(0).(func(context.Context, data.User) data.AuthResponse); ok {
		r0 = rf(ctx, user)
	} else {
		r0 = ret.Get(0).(data.AuthResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, data.User) error); ok {
		r1 = rf(ctx, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAuthService interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuthService creates a new instance of AuthService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthService(t mockConstructorTestingTNewAuthService) *AuthService {
	mock := &AuthService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
